[gd_scene load_steps=10 format=2]

[ext_resource path="res://Imports/Art/SplashScreen.png" type="Texture" id=1]
[ext_resource path="res://Imports/Art/Play.png" type="Texture" id=2]
[ext_resource path="res://Scenes/Start.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 base : hint_color;

uniform float freq : hint_range(1, 10);
uniform float amp : hint_range(0, 4);
uniform float strength : hint_range(0, 1);

uniform sampler2D n;

void fragment(){
	vec2 uv = UV - vec2(0.5);
	float d = clamp((pow(uv.x, 2.0) + pow(uv.y, 2.0)) * strength * (2.0 + abs(sin(TIME * freq) * amp)), 0.0, 1.0);
	
	vec2 off1 = uv * (cos(TIME) * sin(TIME * 2.0) + 1.0) * 1.0;
	vec2 off2 = uv * sin(TIME) * sin(TIME * 1.75) * 0.75;
	
	vec4 n_comp = texture(n, uv + vec2(texture(n, off1).r, texture(n, off2).b));
	
	COLOR = n_comp * d + texture(TEXTURE, UV) * (1.0-d);
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/base = null
shader_param/freq = 5.0
shader_param/amp = 0.15
shader_param/strength = 0.15
shader_param/n = SubResource( 3 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 2 )
region = Rect2( 55, 39, 146, 50 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 2 )
region = Rect2( 311, 39, 146, 50 )

[node name="Node2D" type="Control"]
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 4 )
margin_left = -1.0
margin_top = 0.259949
margin_right = 1026.0
margin_bottom = 602.26
texture = ExtResource( 1 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="."]
margin_left = 440.0
margin_top = 413.931
margin_right = 600.66
margin_bottom = 477.931
texture_normal = SubResource( 5 )
texture_hover = SubResource( 6 )
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="pressed" from="TextureButton" to="TextureButton" method="_on_TextureButton_pressed"]
